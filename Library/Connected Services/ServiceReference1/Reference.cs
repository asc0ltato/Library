//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Library.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookDTO", Namespace="http://schemas.datacontract.org/2004/07/WCFService.DTO")]
    [System.SerializableAttribute()]
    public partial class BookDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] AuthorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] GenresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PresenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SampleCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SampleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Authors {
            get {
                return this.AuthorsField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorsField, value) != true)) {
                    this.AuthorsField = value;
                    this.RaisePropertyChanged("Authors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Genres {
            get {
                return this.GenresField;
            }
            set {
                if ((object.ReferenceEquals(this.GenresField, value) != true)) {
                    this.GenresField = value;
                    this.RaisePropertyChanged("Genres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Presence {
            get {
                return this.PresenceField;
            }
            set {
                if ((this.PresenceField.Equals(value) != true)) {
                    this.PresenceField = value;
                    this.RaisePropertyChanged("Presence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SampleCount {
            get {
                return this.SampleCountField;
            }
            set {
                if ((this.SampleCountField.Equals(value) != true)) {
                    this.SampleCountField = value;
                    this.RaisePropertyChanged("SampleCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SampleId {
            get {
                return this.SampleIdField;
            }
            set {
                if ((this.SampleIdField.Equals(value) != true)) {
                    this.SampleIdField = value;
                    this.RaisePropertyChanged("SampleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDTO", Namespace="http://schemas.datacontract.org/2004/07/WCFService.DTO")]
    [System.SerializableAttribute()]
    public partial class UserDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreate {
            get {
                return this.DateCreateField;
            }
            set {
                if ((this.DateCreateField.Equals(value) != true)) {
                    this.DateCreateField = value;
                    this.RaisePropertyChanged("DateCreate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Users", Namespace="http://schemas.datacontract.org/2004/07/WCFService.Model")]
    [System.SerializableAttribute()]
    public partial class Users : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Library.ServiceReference1.Listgetbooks[] ListgetbooksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordHashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfilePhotoPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Library.ServiceReference1.Role RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreate {
            get {
                return this.DateCreateField;
            }
            set {
                if ((this.DateCreateField.Equals(value) != true)) {
                    this.DateCreateField = value;
                    this.RaisePropertyChanged("DateCreate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Library.ServiceReference1.Listgetbooks[] Listgetbooks {
            get {
                return this.ListgetbooksField;
            }
            set {
                if ((object.ReferenceEquals(this.ListgetbooksField, value) != true)) {
                    this.ListgetbooksField = value;
                    this.RaisePropertyChanged("Listgetbooks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordHash {
            get {
                return this.PasswordHashField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordHashField, value) != true)) {
                    this.PasswordHashField = value;
                    this.RaisePropertyChanged("PasswordHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfilePhotoPath {
            get {
                return this.ProfilePhotoPathField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfilePhotoPathField, value) != true)) {
                    this.ProfilePhotoPathField = value;
                    this.RaisePropertyChanged("ProfilePhotoPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Library.ServiceReference1.Role Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://schemas.datacontract.org/2004/07/WCFService.Model")]
    [System.SerializableAttribute()]
    public partial class Role : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Library.ServiceReference1.Users[] UsersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Library.ServiceReference1.Users[] Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Listgetbooks", Namespace="http://schemas.datacontract.org/2004/07/WCFService.Model")]
    [System.SerializableAttribute()]
    public partial class Listgetbooks : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateReturnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTakenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Library.ServiceReference1.Sample SampleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SampleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Library.ServiceReference1.Users UsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UsersIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateReturn {
            get {
                return this.DateReturnField;
            }
            set {
                if ((this.DateReturnField.Equals(value) != true)) {
                    this.DateReturnField = value;
                    this.RaisePropertyChanged("DateReturn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTaken {
            get {
                return this.DateTakenField;
            }
            set {
                if ((this.DateTakenField.Equals(value) != true)) {
                    this.DateTakenField = value;
                    this.RaisePropertyChanged("DateTaken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Library.ServiceReference1.Sample Sample {
            get {
                return this.SampleField;
            }
            set {
                if ((object.ReferenceEquals(this.SampleField, value) != true)) {
                    this.SampleField = value;
                    this.RaisePropertyChanged("Sample");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SampleId {
            get {
                return this.SampleIdField;
            }
            set {
                if ((this.SampleIdField.Equals(value) != true)) {
                    this.SampleIdField = value;
                    this.RaisePropertyChanged("SampleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Library.ServiceReference1.Users Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UsersId {
            get {
                return this.UsersIdField;
            }
            set {
                if ((this.UsersIdField.Equals(value) != true)) {
                    this.UsersIdField = value;
                    this.RaisePropertyChanged("UsersId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sample", Namespace="http://schemas.datacontract.org/2004/07/WCFService.Model")]
    [System.SerializableAttribute()]
    public partial class Sample : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Library.ServiceReference1.Book BookField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BookIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Library.ServiceReference1.Listgetbooks[] ListgetbooksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PresenceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Library.ServiceReference1.Book Book {
            get {
                return this.BookField;
            }
            set {
                if ((object.ReferenceEquals(this.BookField, value) != true)) {
                    this.BookField = value;
                    this.RaisePropertyChanged("Book");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BookId {
            get {
                return this.BookIdField;
            }
            set {
                if ((this.BookIdField.Equals(value) != true)) {
                    this.BookIdField = value;
                    this.RaisePropertyChanged("BookId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Library.ServiceReference1.Listgetbooks[] Listgetbooks {
            get {
                return this.ListgetbooksField;
            }
            set {
                if ((object.ReferenceEquals(this.ListgetbooksField, value) != true)) {
                    this.ListgetbooksField = value;
                    this.RaisePropertyChanged("Listgetbooks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Presence {
            get {
                return this.PresenceField;
            }
            set {
                if ((this.PresenceField.Equals(value) != true)) {
                    this.PresenceField = value;
                    this.RaisePropertyChanged("Presence");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Book", Namespace="http://schemas.datacontract.org/2004/07/WCFService.Model")]
    [System.SerializableAttribute()]
    public partial class Book : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Library.ServiceReference1.BookAuthors[] BookAuthorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Library.ServiceReference1.BookGenres[] BookGenresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Library.ServiceReference1.Review[] ReviewsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Library.ServiceReference1.Sample[] SamplesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Library.ServiceReference1.BookAuthors[] BookAuthors {
            get {
                return this.BookAuthorsField;
            }
            set {
                if ((object.ReferenceEquals(this.BookAuthorsField, value) != true)) {
                    this.BookAuthorsField = value;
                    this.RaisePropertyChanged("BookAuthors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Library.ServiceReference1.BookGenres[] BookGenres {
            get {
                return this.BookGenresField;
            }
            set {
                if ((object.ReferenceEquals(this.BookGenresField, value) != true)) {
                    this.BookGenresField = value;
                    this.RaisePropertyChanged("BookGenres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Library.ServiceReference1.Review[] Reviews {
            get {
                return this.ReviewsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReviewsField, value) != true)) {
                    this.ReviewsField = value;
                    this.RaisePropertyChanged("Reviews");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Library.ServiceReference1.Sample[] Samples {
            get {
                return this.SamplesField;
            }
            set {
                if ((object.ReferenceEquals(this.SamplesField, value) != true)) {
                    this.SamplesField = value;
                    this.RaisePropertyChanged("Samples");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookAuthors", Namespace="http://schemas.datacontract.org/2004/07/WCFService.Model")]
    [System.SerializableAttribute()]
    public partial class BookAuthors : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Library.ServiceReference1.Author AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuthorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Library.ServiceReference1.Book BookField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BookIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Library.ServiceReference1.Author Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuthorId {
            get {
                return this.AuthorIdField;
            }
            set {
                if ((this.AuthorIdField.Equals(value) != true)) {
                    this.AuthorIdField = value;
                    this.RaisePropertyChanged("AuthorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Library.ServiceReference1.Book Book {
            get {
                return this.BookField;
            }
            set {
                if ((object.ReferenceEquals(this.BookField, value) != true)) {
                    this.BookField = value;
                    this.RaisePropertyChanged("Book");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BookId {
            get {
                return this.BookIdField;
            }
            set {
                if ((this.BookIdField.Equals(value) != true)) {
                    this.BookIdField = value;
                    this.RaisePropertyChanged("BookId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookGenres", Namespace="http://schemas.datacontract.org/2004/07/WCFService.Model")]
    [System.SerializableAttribute()]
    public partial class BookGenres : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Library.ServiceReference1.Book BookField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BookIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Library.ServiceReference1.Genre GenreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GenreIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Library.ServiceReference1.Book Book {
            get {
                return this.BookField;
            }
            set {
                if ((object.ReferenceEquals(this.BookField, value) != true)) {
                    this.BookField = value;
                    this.RaisePropertyChanged("Book");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BookId {
            get {
                return this.BookIdField;
            }
            set {
                if ((this.BookIdField.Equals(value) != true)) {
                    this.BookIdField = value;
                    this.RaisePropertyChanged("BookId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Library.ServiceReference1.Genre Genre {
            get {
                return this.GenreField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreField, value) != true)) {
                    this.GenreField = value;
                    this.RaisePropertyChanged("Genre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GenreId {
            get {
                return this.GenreIdField;
            }
            set {
                if ((this.GenreIdField.Equals(value) != true)) {
                    this.GenreIdField = value;
                    this.RaisePropertyChanged("GenreId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Review", Namespace="http://schemas.datacontract.org/2004/07/WCFService.Model")]
    [System.SerializableAttribute()]
    public partial class Review : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Library.ServiceReference1.Book BookField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BookIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Library.ServiceReference1.Users UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Library.ServiceReference1.Book Book {
            get {
                return this.BookField;
            }
            set {
                if ((object.ReferenceEquals(this.BookField, value) != true)) {
                    this.BookField = value;
                    this.RaisePropertyChanged("Book");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BookId {
            get {
                return this.BookIdField;
            }
            set {
                if ((this.BookIdField.Equals(value) != true)) {
                    this.BookIdField = value;
                    this.RaisePropertyChanged("BookId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Library.ServiceReference1.Users User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Author", Namespace="http://schemas.datacontract.org/2004/07/WCFService.Model")]
    [System.SerializableAttribute()]
    public partial class Author : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Library.ServiceReference1.BookAuthors[] BookAuthorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Library.ServiceReference1.BookAuthors[] BookAuthors {
            get {
                return this.BookAuthorsField;
            }
            set {
                if ((object.ReferenceEquals(this.BookAuthorsField, value) != true)) {
                    this.BookAuthorsField = value;
                    this.RaisePropertyChanged("BookAuthors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Genre", Namespace="http://schemas.datacontract.org/2004/07/WCFService.Model")]
    [System.SerializableAttribute()]
    public partial class Genre : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Library.ServiceReference1.BookGenres[] BookGenresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Library.ServiceReference1.BookGenres[] BookGenres {
            get {
                return this.BookGenresField;
            }
            set {
                if ((object.ReferenceEquals(this.BookGenresField, value) != true)) {
                    this.BookGenresField = value;
                    this.RaisePropertyChanged("BookGenres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TakenBookDTO", Namespace="http://schemas.datacontract.org/2004/07/WCFService.DTO")]
    [System.SerializableAttribute()]
    public partial class TakenBookDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BookNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateReturnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTakenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SampleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BookName {
            get {
                return this.BookNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BookNameField, value) != true)) {
                    this.BookNameField = value;
                    this.RaisePropertyChanged("BookName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateReturn {
            get {
                return this.DateReturnField;
            }
            set {
                if ((this.DateReturnField.Equals(value) != true)) {
                    this.DateReturnField = value;
                    this.RaisePropertyChanged("DateReturn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTaken {
            get {
                return this.DateTakenField;
            }
            set {
                if ((this.DateTakenField.Equals(value) != true)) {
                    this.DateTakenField = value;
                    this.RaisePropertyChanged("DateTaken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SampleId {
            get {
                return this.SampleIdField;
            }
            set {
                if ((this.SampleIdField.Equals(value) != true)) {
                    this.SampleIdField = value;
                    this.RaisePropertyChanged("SampleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReviewDTO", Namespace="http://schemas.datacontract.org/2004/07/WCFService.DTO")]
    [System.SerializableAttribute()]
    public partial class ReviewDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BookNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanEditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BookName {
            get {
                return this.BookNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BookNameField, value) != true)) {
                    this.BookNameField = value;
                    this.RaisePropertyChanged("BookName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanEdit {
            get {
                return this.CanEditField;
            }
            set {
                if ((this.CanEditField.Equals(value) != true)) {
                    this.CanEditField = value;
                    this.RaisePropertyChanged("CanEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RegisterUser", ReplyAction="http://tempuri.org/IService1/RegisterUserResponse")]
        string RegisterUser(string name, string login, string email, string password, byte[] profilePhoto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RegisterUser", ReplyAction="http://tempuri.org/IService1/RegisterUserResponse")]
        System.Threading.Tasks.Task<string> RegisterUserAsync(string name, string login, string email, string password, byte[] profilePhoto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserIdByLoginOrEmail", ReplyAction="http://tempuri.org/IService1/GetUserIdByLoginOrEmailResponse")]
        int GetUserIdByLoginOrEmail(string loginOrEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserIdByLoginOrEmail", ReplyAction="http://tempuri.org/IService1/GetUserIdByLoginOrEmailResponse")]
        System.Threading.Tasks.Task<int> GetUserIdByLoginOrEmailAsync(string loginOrEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoginUser", ReplyAction="http://tempuri.org/IService1/LoginUserResponse")]
        string LoginUser(string loginOrEmail, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoginUser", ReplyAction="http://tempuri.org/IService1/LoginUserResponse")]
        System.Threading.Tasks.Task<string> LoginUserAsync(string loginOrEmail, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGenres", ReplyAction="http://tempuri.org/IService1/GetGenresResponse")]
        string[] GetGenres();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGenres", ReplyAction="http://tempuri.org/IService1/GetGenresResponse")]
        System.Threading.Tasks.Task<string[]> GetGenresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBooks", ReplyAction="http://tempuri.org/IService1/GetBooksResponse")]
        Library.ServiceReference1.BookDTO[] GetBooks(string authorName, string genreName, string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBooks", ReplyAction="http://tempuri.org/IService1/GetBooksResponse")]
        System.Threading.Tasks.Task<Library.ServiceReference1.BookDTO[]> GetBooksAsync(string authorName, string genreName, string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllBooks", ReplyAction="http://tempuri.org/IService1/GetAllBooksResponse")]
        Library.ServiceReference1.BookDTO[] GetAllBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllBooks", ReplyAction="http://tempuri.org/IService1/GetAllBooksResponse")]
        System.Threading.Tasks.Task<Library.ServiceReference1.BookDTO[]> GetAllBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddBook", ReplyAction="http://tempuri.org/IService1/AddBookResponse")]
        void AddBook(Library.ServiceReference1.BookDTO book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddBook", ReplyAction="http://tempuri.org/IService1/AddBookResponse")]
        System.Threading.Tasks.Task AddBookAsync(Library.ServiceReference1.BookDTO book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateBook", ReplyAction="http://tempuri.org/IService1/UpdateBookResponse")]
        void UpdateBook(Library.ServiceReference1.BookDTO bookDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateBook", ReplyAction="http://tempuri.org/IService1/UpdateBookResponse")]
        System.Threading.Tasks.Task UpdateBookAsync(Library.ServiceReference1.BookDTO bookDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteBook", ReplyAction="http://tempuri.org/IService1/DeleteBookResponse")]
        string DeleteBook(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteBook", ReplyAction="http://tempuri.org/IService1/DeleteBookResponse")]
        System.Threading.Tasks.Task<string> DeleteBookAsync(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBookById", ReplyAction="http://tempuri.org/IService1/GetBookByIdResponse")]
        Library.ServiceReference1.BookDTO GetBookById(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBookById", ReplyAction="http://tempuri.org/IService1/GetBookByIdResponse")]
        System.Threading.Tasks.Task<Library.ServiceReference1.BookDTO> GetBookByIdAsync(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUsers", ReplyAction="http://tempuri.org/IService1/GetUsersResponse")]
        Library.ServiceReference1.UserDTO[] GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUsers", ReplyAction="http://tempuri.org/IService1/GetUsersResponse")]
        System.Threading.Tasks.Task<Library.ServiceReference1.UserDTO[]> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserInfo", ReplyAction="http://tempuri.org/IService1/GetUserInfoResponse")]
        Library.ServiceReference1.Users GetUserInfo(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserInfo", ReplyAction="http://tempuri.org/IService1/GetUserInfoResponse")]
        System.Threading.Tasks.Task<Library.ServiceReference1.Users> GetUserInfoAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUser", ReplyAction="http://tempuri.org/IService1/UpdateUserResponse")]
        void UpdateUser(int userId, string name, string login, string email, string password, byte[] photo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUser", ReplyAction="http://tempuri.org/IService1/UpdateUserResponse")]
        System.Threading.Tasks.Task UpdateUserAsync(int userId, string name, string login, string email, string password, byte[] photo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        string DeleteUser(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        System.Threading.Tasks.Task<string> DeleteUserAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTakenBooksByUserId", ReplyAction="http://tempuri.org/IService1/GetTakenBooksByUserIdResponse")]
        Library.ServiceReference1.TakenBookDTO[] GetTakenBooksByUserId(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTakenBooksByUserId", ReplyAction="http://tempuri.org/IService1/GetTakenBooksByUserIdResponse")]
        System.Threading.Tasks.Task<Library.ServiceReference1.TakenBookDTO[]> GetTakenBooksByUserIdAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllTakenBooks", ReplyAction="http://tempuri.org/IService1/GetAllTakenBooksResponse")]
        Library.ServiceReference1.TakenBookDTO[] GetAllTakenBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllTakenBooks", ReplyAction="http://tempuri.org/IService1/GetAllTakenBooksResponse")]
        System.Threading.Tasks.Task<Library.ServiceReference1.TakenBookDTO[]> GetAllTakenBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TakeBook", ReplyAction="http://tempuri.org/IService1/TakeBookResponse")]
        string TakeBook(int userId, int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TakeBook", ReplyAction="http://tempuri.org/IService1/TakeBookResponse")]
        System.Threading.Tasks.Task<string> TakeBookAsync(int userId, int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReturnBook", ReplyAction="http://tempuri.org/IService1/ReturnBookResponse")]
        string ReturnBook(int userId, int sampleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReturnBook", ReplyAction="http://tempuri.org/IService1/ReturnBookResponse")]
        System.Threading.Tasks.Task<string> ReturnBookAsync(int userId, int sampleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/HasUserTakenBook", ReplyAction="http://tempuri.org/IService1/HasUserTakenBookResponse")]
        bool HasUserTakenBook(int userId, int sampleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/HasUserTakenBook", ReplyAction="http://tempuri.org/IService1/HasUserTakenBookResponse")]
        System.Threading.Tasks.Task<bool> HasUserTakenBookAsync(int userId, int sampleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllReviews", ReplyAction="http://tempuri.org/IService1/GetAllReviewsResponse")]
        Library.ServiceReference1.ReviewDTO[] GetAllReviews(int currentUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllReviews", ReplyAction="http://tempuri.org/IService1/GetAllReviewsResponse")]
        System.Threading.Tasks.Task<Library.ServiceReference1.ReviewDTO[]> GetAllReviewsAsync(int currentUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetReviews", ReplyAction="http://tempuri.org/IService1/GetReviewsResponse")]
        Library.ServiceReference1.ReviewDTO[] GetReviews();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetReviews", ReplyAction="http://tempuri.org/IService1/GetReviewsResponse")]
        System.Threading.Tasks.Task<Library.ServiceReference1.ReviewDTO[]> GetReviewsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetReviewById", ReplyAction="http://tempuri.org/IService1/GetReviewByIdResponse")]
        Library.ServiceReference1.ReviewDTO GetReviewById(int reviewId, int _currentUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetReviewById", ReplyAction="http://tempuri.org/IService1/GetReviewByIdResponse")]
        System.Threading.Tasks.Task<Library.ServiceReference1.ReviewDTO> GetReviewByIdAsync(int reviewId, int _currentUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddBookReview", ReplyAction="http://tempuri.org/IService1/AddBookReviewResponse")]
        string AddBookReview(int userId, int bookId, string review, int rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddBookReview", ReplyAction="http://tempuri.org/IService1/AddBookReviewResponse")]
        System.Threading.Tasks.Task<string> AddBookReviewAsync(int userId, int bookId, string review, int rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateReview", ReplyAction="http://tempuri.org/IService1/UpdateReviewResponse")]
        void UpdateReview(int reviewId, string content, int rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateReview", ReplyAction="http://tempuri.org/IService1/UpdateReviewResponse")]
        System.Threading.Tasks.Task UpdateReviewAsync(int reviewId, string content, int rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteReview", ReplyAction="http://tempuri.org/IService1/DeleteReviewResponse")]
        void DeleteReview(int reviewId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteReview", ReplyAction="http://tempuri.org/IService1/DeleteReviewResponse")]
        System.Threading.Tasks.Task DeleteReviewAsync(int reviewId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AdminDeleteReview", ReplyAction="http://tempuri.org/IService1/AdminDeleteReviewResponse")]
        void AdminDeleteReview(int reviewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AdminDeleteReview", ReplyAction="http://tempuri.org/IService1/AdminDeleteReviewResponse")]
        System.Threading.Tasks.Task AdminDeleteReviewAsync(int reviewId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Library.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Library.ServiceReference1.IService1>, Library.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string RegisterUser(string name, string login, string email, string password, byte[] profilePhoto) {
            return base.Channel.RegisterUser(name, login, email, password, profilePhoto);
        }
        
        public System.Threading.Tasks.Task<string> RegisterUserAsync(string name, string login, string email, string password, byte[] profilePhoto) {
            return base.Channel.RegisterUserAsync(name, login, email, password, profilePhoto);
        }
        
        public int GetUserIdByLoginOrEmail(string loginOrEmail) {
            return base.Channel.GetUserIdByLoginOrEmail(loginOrEmail);
        }
        
        public System.Threading.Tasks.Task<int> GetUserIdByLoginOrEmailAsync(string loginOrEmail) {
            return base.Channel.GetUserIdByLoginOrEmailAsync(loginOrEmail);
        }
        
        public string LoginUser(string loginOrEmail, string password) {
            return base.Channel.LoginUser(loginOrEmail, password);
        }
        
        public System.Threading.Tasks.Task<string> LoginUserAsync(string loginOrEmail, string password) {
            return base.Channel.LoginUserAsync(loginOrEmail, password);
        }
        
        public string[] GetGenres() {
            return base.Channel.GetGenres();
        }
        
        public System.Threading.Tasks.Task<string[]> GetGenresAsync() {
            return base.Channel.GetGenresAsync();
        }
        
        public Library.ServiceReference1.BookDTO[] GetBooks(string authorName, string genreName, string title) {
            return base.Channel.GetBooks(authorName, genreName, title);
        }
        
        public System.Threading.Tasks.Task<Library.ServiceReference1.BookDTO[]> GetBooksAsync(string authorName, string genreName, string title) {
            return base.Channel.GetBooksAsync(authorName, genreName, title);
        }
        
        public Library.ServiceReference1.BookDTO[] GetAllBooks() {
            return base.Channel.GetAllBooks();
        }
        
        public System.Threading.Tasks.Task<Library.ServiceReference1.BookDTO[]> GetAllBooksAsync() {
            return base.Channel.GetAllBooksAsync();
        }
        
        public void AddBook(Library.ServiceReference1.BookDTO book) {
            base.Channel.AddBook(book);
        }
        
        public System.Threading.Tasks.Task AddBookAsync(Library.ServiceReference1.BookDTO book) {
            return base.Channel.AddBookAsync(book);
        }
        
        public void UpdateBook(Library.ServiceReference1.BookDTO bookDto) {
            base.Channel.UpdateBook(bookDto);
        }
        
        public System.Threading.Tasks.Task UpdateBookAsync(Library.ServiceReference1.BookDTO bookDto) {
            return base.Channel.UpdateBookAsync(bookDto);
        }
        
        public string DeleteBook(int bookId) {
            return base.Channel.DeleteBook(bookId);
        }
        
        public System.Threading.Tasks.Task<string> DeleteBookAsync(int bookId) {
            return base.Channel.DeleteBookAsync(bookId);
        }
        
        public Library.ServiceReference1.BookDTO GetBookById(int bookId) {
            return base.Channel.GetBookById(bookId);
        }
        
        public System.Threading.Tasks.Task<Library.ServiceReference1.BookDTO> GetBookByIdAsync(int bookId) {
            return base.Channel.GetBookByIdAsync(bookId);
        }
        
        public Library.ServiceReference1.UserDTO[] GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<Library.ServiceReference1.UserDTO[]> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public Library.ServiceReference1.Users GetUserInfo(int userId) {
            return base.Channel.GetUserInfo(userId);
        }
        
        public System.Threading.Tasks.Task<Library.ServiceReference1.Users> GetUserInfoAsync(int userId) {
            return base.Channel.GetUserInfoAsync(userId);
        }
        
        public void UpdateUser(int userId, string name, string login, string email, string password, byte[] photo) {
            base.Channel.UpdateUser(userId, name, login, email, password, photo);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(int userId, string name, string login, string email, string password, byte[] photo) {
            return base.Channel.UpdateUserAsync(userId, name, login, email, password, photo);
        }
        
        public string DeleteUser(int userId) {
            return base.Channel.DeleteUser(userId);
        }
        
        public System.Threading.Tasks.Task<string> DeleteUserAsync(int userId) {
            return base.Channel.DeleteUserAsync(userId);
        }
        
        public Library.ServiceReference1.TakenBookDTO[] GetTakenBooksByUserId(int userId) {
            return base.Channel.GetTakenBooksByUserId(userId);
        }
        
        public System.Threading.Tasks.Task<Library.ServiceReference1.TakenBookDTO[]> GetTakenBooksByUserIdAsync(int userId) {
            return base.Channel.GetTakenBooksByUserIdAsync(userId);
        }
        
        public Library.ServiceReference1.TakenBookDTO[] GetAllTakenBooks() {
            return base.Channel.GetAllTakenBooks();
        }
        
        public System.Threading.Tasks.Task<Library.ServiceReference1.TakenBookDTO[]> GetAllTakenBooksAsync() {
            return base.Channel.GetAllTakenBooksAsync();
        }
        
        public string TakeBook(int userId, int bookId) {
            return base.Channel.TakeBook(userId, bookId);
        }
        
        public System.Threading.Tasks.Task<string> TakeBookAsync(int userId, int bookId) {
            return base.Channel.TakeBookAsync(userId, bookId);
        }
        
        public string ReturnBook(int userId, int sampleId) {
            return base.Channel.ReturnBook(userId, sampleId);
        }
        
        public System.Threading.Tasks.Task<string> ReturnBookAsync(int userId, int sampleId) {
            return base.Channel.ReturnBookAsync(userId, sampleId);
        }
        
        public bool HasUserTakenBook(int userId, int sampleId) {
            return base.Channel.HasUserTakenBook(userId, sampleId);
        }
        
        public System.Threading.Tasks.Task<bool> HasUserTakenBookAsync(int userId, int sampleId) {
            return base.Channel.HasUserTakenBookAsync(userId, sampleId);
        }
        
        public Library.ServiceReference1.ReviewDTO[] GetAllReviews(int currentUserId) {
            return base.Channel.GetAllReviews(currentUserId);
        }
        
        public System.Threading.Tasks.Task<Library.ServiceReference1.ReviewDTO[]> GetAllReviewsAsync(int currentUserId) {
            return base.Channel.GetAllReviewsAsync(currentUserId);
        }
        
        public Library.ServiceReference1.ReviewDTO[] GetReviews() {
            return base.Channel.GetReviews();
        }
        
        public System.Threading.Tasks.Task<Library.ServiceReference1.ReviewDTO[]> GetReviewsAsync() {
            return base.Channel.GetReviewsAsync();
        }
        
        public Library.ServiceReference1.ReviewDTO GetReviewById(int reviewId, int _currentUserId) {
            return base.Channel.GetReviewById(reviewId, _currentUserId);
        }
        
        public System.Threading.Tasks.Task<Library.ServiceReference1.ReviewDTO> GetReviewByIdAsync(int reviewId, int _currentUserId) {
            return base.Channel.GetReviewByIdAsync(reviewId, _currentUserId);
        }
        
        public string AddBookReview(int userId, int bookId, string review, int rating) {
            return base.Channel.AddBookReview(userId, bookId, review, rating);
        }
        
        public System.Threading.Tasks.Task<string> AddBookReviewAsync(int userId, int bookId, string review, int rating) {
            return base.Channel.AddBookReviewAsync(userId, bookId, review, rating);
        }
        
        public void UpdateReview(int reviewId, string content, int rating) {
            base.Channel.UpdateReview(reviewId, content, rating);
        }
        
        public System.Threading.Tasks.Task UpdateReviewAsync(int reviewId, string content, int rating) {
            return base.Channel.UpdateReviewAsync(reviewId, content, rating);
        }
        
        public void DeleteReview(int reviewId, int userId) {
            base.Channel.DeleteReview(reviewId, userId);
        }
        
        public System.Threading.Tasks.Task DeleteReviewAsync(int reviewId, int userId) {
            return base.Channel.DeleteReviewAsync(reviewId, userId);
        }
        
        public void AdminDeleteReview(int reviewId) {
            base.Channel.AdminDeleteReview(reviewId);
        }
        
        public System.Threading.Tasks.Task AdminDeleteReviewAsync(int reviewId) {
            return base.Channel.AdminDeleteReviewAsync(reviewId);
        }
    }
}
